# The javascript `Date` as string. Type represents date and time as the ISO Date string.
scalar DateTime

# The available genders
enum Gender {
  Male
  Female
}

# The basic hobbies
enum Hobby {
  Education
  Fashion
  Fitness
  Music
  Nature
  Play
}

type Mutation {
  createVillager(options: VillagerInput!): Villager!
  updateVillager(input: VillagerUpdateInput!, id: Int!): Boolean!
  deleteVillager(id: Int!): Boolean!
}

# The basic personalities
enum Personality {
  BigSister
  Cranky
  Jock
  Lazy
  Normal
  Peppy
  Snooty
}

type Query {
  villagers: [Villager!]!
  villagersByPersonality(personality: Personality!): [Villager!]!
  villagersByHobby(hobby: Hobby!): [Villager!]!
  villagersByGender(gender: Gender!): [Villager!]!
  villagersBySpecies(species: Species!): [Villager!]!
}

# The basic species
enum Species {
  Alligator
  Anteator
  Bear
  Bird
  Bull
  Cat
  Chicken
  Cow
  Cub
  Deer
  Dog
  Duck
  Eagle
  Elephant
  Frog
  Goat
  Gorilla
  Hamster
  Hippo
  Horse
  Kangaroo
  Koala
  Lion
  Monkey
  Mouse
  Octopus
  Ostrich
  Penguin
  Pig
  Rabbit
  Rhino
  Sheep
  Squirrel
  Tiger
  Wolf
}

type Villager {
  id: Float!
  name: String!
  catchphrase: String!
  birthday: DateTime!
  species: Species!
  gender: Gender!
  personality: Personality!
  hobby: Hobby!
}

input VillagerInput {
  name: String!
  catchphrase: String!
  birthday: DateTime!
  personality: Personality!
  species: Species!
  gender: Gender!
  hobby: Hobby!
}

input VillagerUpdateInput {
  name: String
  catchphrase: String
  birthday: DateTime
  personality: Personality
  species: Species
  gender: Gender
  hobby: Hobby
}

